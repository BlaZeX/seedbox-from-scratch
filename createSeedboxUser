##################### FIRST LINE
# ---------------------------
#!/bin/bash
# ---------------------------
#
# The Seedbox From Scratch Script
#   By Notos ---> https://github.com/Notos/
#
#
#
# 3.1
#
# you can also use it this way:
#
#    createSeedboxUser <username> <password>
#
#
function getString
{
  local ISPASSWORD=$1
  local LABEL=$2
  local RETURN=$3
  local DEFAULT=$4
  local NEWVAR1=a
  local NEWVAR2=b

  while [ ! $NEWVAR1 = $NEWVAR2 ] || [ -z "$NEWVAR1" ];
  do
    clear
    echo "#"
    echo "#"
    echo "# The Seedbox From Scratch Script"
    echo "#   By Notos ---> https://github.com/Notos/"
    echo "#"
    echo "#"
    echo "#"
    echo

    if [ "$ISPASSWORD" == "YES" ]; then
      read -s -p "$DEFAULT" -p "$LABEL" NEWVAR1
    else
      read -e -i "$DEFAULT" -p "$LABEL" NEWVAR1
    fi

    if [ "$NEWVAR1" == "$DEFAULT" ]
    then
      NEWVAR2=$NEWVAR1
    else
      if [ "$ISPASSWORD" == "YES" ]; then
        echo
        read -s -p "Retype: " NEWVAR2
      else
        read -p "Retype: " NEWVAR2
      fi
    fi
  done
  eval $RETURN=\$NEWVAR1
}
#
#

if [[ "$0" == "-bash" ]]; then
  echo "This script is not executable, please run chmod +x on it."
  exit 0
fi

NEWUSER1=a
NEWUSER2=b
PASSWORD1=a
PASSWORD2=b

if [ $1 ]; then
  NEWUSER1=$1
  NEWUSER2=$1
else
  getString NO  "Username for your seedbox user: " NEWUSER1
fi

if [ $2 ]; then
  PASSWORD1=$2
  PASSWORD2=$2
else
  getString YES "ruTorrent password for user $NEWUSER1: " PASSWORD1
fi

if [ $3 ]
then
  if [ "$3" == "YES" ] || [ "$3" == "NO" ]; then
    USERHASSSHACCESS1=$3
    USERHASSSHACCESS2=$3
  else
    getString NO  "User can login via SSH?: " USERHASSSHACCESS1 NO
  fi
else
  getString NO  "User can login via SSH?: " USERHASSSHACCESS1 NO
fi

if [ -f /etc/jailkit/jk_init.ini ] && [ "$USERHASSSHACCESS1" == "YES" ]; then
  if [ $4 ]
  then
    if [ "$4" == "YES" ] || [ "$4" == "NO" ]; then
      CHROOTJAIL1=$4
      CHROOTJAIL2=$4
    else
      getString NO  "User should be in a chroot jail?: " CHROOTJAIL1 YES
    fi
  else
    getString NO  "User should be in a chroot jail?: " CHROOTJAIL1 YES
  fi
else
  CHROOTJAIL1=NO
fi

if [ $5 ]
then
  if [ "$5" == "YES" ] || [ "$5" == "NO" ]; then
    USERINSUDOERS1=$5
    USERINSUDOERS2=$5
  else
    getString NO  "Add user to sudoers?: " USERINSUDOERS1 NO
  fi
else
  getString NO  "Add user to sudoers?: " USERINSUDOERS1 NO
fi

HOMEBASE=/home/$NEWUSER1
HOMEDIR=$HOMEBASE
HOMEJAILED=$HOMEBASE
if [ "$CHROOTJAIL1" == "YES" ]; then
  JAILDIR=$HOMEDIR/jail
  HOMEDIR=$HOMEDIR/home
  HOMEJAILED=$JAILDIR/home
fi

# 3.2

set -x verbose

# 3.3

sudo rm -f -r $HOMEDIR
sudo mkdir -p $HOMEDIR
sudo useradd --create-home --home $HOMEDIR --user-group --password $(mkpasswd -s -m md5 $PASSWORD1) --shell /bin/bash $NEWUSER1
if [ ! -f $HOMEDIR/.profile ]; then
  sudo cp /etc/skel/.bashrc $HOMEDIR
  sudo cp /etc/skel/.bash_logout $HOMEDIR
  sudo cp /etc/skel/.profile $HOMEDIR
  sudo chown $NEWUSER1: $HOMEDIR
  sudo chown $NEWUSER1: $HOMEDIR/.bashrc
  sudo chown $NEWUSER1: $HOMEDIR/.bash_logout
  sudo chown $NEWUSER1: $HOMEDIR/.profile
fi

if [ "$CHROOTJAIL1" == "YES" ]; then
  sudo mkdir -p $JAILDIR
  sudo chown root: $HOMEDIR
  sudo chown root: $JAILDIR
  sudo jk_init -v $JAILDIR basicshell editors extendedshell jk_lsh git rsync openvpn perl vncserver netbasics netutils openvpn scp ssh terminfo rtorrent irssi screen id php pgrep mediainfo ffmpeg curl plowup unzip unrar ping wget dig nslookup
  sudo jk_jailuser -m -j $JAILDIR $NEWUSER1
  sudo jk_cp -j $JAILDIR /etc/ld.so.cache
  sudo jk_cp -j $JAILDIR /usr/lib/liblwres.so.80
  sudo jk_cp -j $JAILDIR /usr/lib/libdns.so.81
  sudo jk_cp -j $JAILDIR /usr/lib/libbind9.so.80
  sudo jk_cp -j $JAILDIR /usr/lib/libisccfg.so.82
  sudo jk_cp -j $JAILDIR /usr/lib/libisc.so.83
  sudo jk_cp -j $JAILDIR /usr/lib/libGeoIP.so.1
  sudo jk_cp -j $JAILDIR /usr/lib/ssl/openssl.cnf
  sudo jk_cp -j $JAILDIR /usr/lib/`uname -m`-linux-gnu/openssl-1.0.0/engines/libgost.so
  sudo jk_cp -j $JAILDIR /lib/`uname -m`-linux-gnu/libpthread.so.0
  sudo jk_cp -j $JAILDIR /lib/`uname -m`-linux-gnu/libc.so.6
  sudo jk_cp -j $JAILDIR /usr/lib/`uname -m`-linux-gnu/libgssapi_krb5.so.2
  sudo jk_cp -j $JAILDIR /lib/`uname -m`-linux-gnu/libcrypto.so.1.0.0
  sudo jk_cp -j $JAILDIR /usr/lib/`uname -m`-linux-gnu/libxml2.so.2
  sudo jk_cp -j $JAILDIR /usr/lib/`uname -m`-linux-gnu/libkrb5.so.3
  sudo jk_cp -j $JAILDIR /usr/lib/`uname -m`-linux-gnu/libk5crypto.so.3
  sudo jk_cp -j $JAILDIR /lib/`uname -m`-linux-gnu/libcom_err.so.2
  sudo jk_cp -j $JAILDIR /usr/lib/`uname -m`-linux-gnu/libkrb5support.so.0
  sudo jk_cp -j $JAILDIR /lib/`uname -m`-linux-gnu/libdl.so.2
  sudo jk_cp -j $JAILDIR /lib/`uname -m`-linux-gnu/libz.so.1
  sudo jk_cp -j $JAILDIR /lib/`uname -m`-linux-gnu/libm.so.6
  sudo jk_cp -j $JAILDIR /lib/`uname -m`-linux-gnu/libkeyutils.so.1
  sudo jk_cp -j $JAILDIR /lib/`uname -m`-linux-gnu/libresolv.so.2
  sudo jk_cp -j $JAILDIR /lib/`uname -m`-linux-gnu/libnss_compat.so.2
  sudo jk_cp -j $JAILDIR /lib/`uname -m`-linux-gnu/libnss_dns.so.2
  sudo jk_cp -j $JAILDIR /lib/`uname -m`-linux-gnu/libnss_files.so.2
  sudo jk_cp -j $JAILDIR /usr/bin/rtorrent
  sudo jk_cp -j $JAILDIR /usr/bin/irssi
  sudo jk_cp -j $JAILDIR /dev/tty*
  sudo cp /etc/skel/.bashrc $HOMEJAILED
  sudo cp /usr/sbin/jk_lsh $JAILDIR/usr/sbin/jk_lsh
  sudo perl -pi -e "s/\/usr\/sbin\/jk_lsh/\/bin\/bash/g" $JAILDIR/etc/passwd
  sudo mkdir -p $HOMEJAILED
  sudo chown -R $NEWUSER1: $HOMEJAILED
  sudo cp /usr/sbin/jk_lsh $JAILDIR/usr/sbin/jk_lsh
  sudo killall jk_socketd
  sudo jk_socketd
  echo "[$NEWUSER1]" | sudo tee -a /etc/jailkit/jk_chrootsh.ini
  echo "environment=TERM=linux" | sudo tee -a /etc/jailkit/jk_chrootsh.ini
  echo "env= TERM" | sudo tee -a /etc/jailkit/jk_chrootsh.ini
  echo "export TERM=linux" | sudo tee -a $JAILDIR/home/$NEWUSER1/home/.bashrc
  sudo ldconfig -r $JAILDIR
  sudo mkdir $JAILDIR/proc
  sudo mount proc $JAILDIR/proc -t proc
  sudo mount -t devpts devpts $JAILDIR/dev/pts -o mode=666
  sudo chown root: $JAILDIR/var/run/screen
  sudo chmod u+s $JAILDIR/usr/bin/screen
  #sudo chmod -R 777 $JAILDIR/var/run
  sudo chmod -R 777 $JAILDIR/var/run/screen
  sudo chmod -R 777 $JAILDIR/dev/pts
  sudo chmod 666 $JAILDIR/dev/null
  #sudo chmod 777 /dev/pts/3
  sudo chmod -R 755 $JAILDIR/var/run/screen
  sudo chmod -R 700 $JAILDIR/var/run/screen/S-$NEWUSER1
  sudo chmod -R 755 /var/run/screen
  HOMEJAILED=$HOMEJAILED/$NEWUSER1/home
  ADDHOME1=\\/home
  sudo mkdir $JAILDIR/tmp
  sudo chmod 1777 $JAILDIR/tmp
  sudo mount --bind /tmp $JAILDIR/tmp
  sudo mkdir -p $JAILDIR/var/www/rutorrent
  sudo chmod 1777 $JAILDIR/var/www/rutorrent
  sudo mount --bind /var/www/rutorrent $JAILDIR/var/www/rutorrent
  sudo chmod 777 /var/www/rutorrent/share
fi

# 3.4

if [ "$USERINSUDOERS1" == "YES" ]; then
  echo "" | sudo tee -a /etc/sudoers
  echo "$NEWUSER1  ALL=(ALL) ALL" | sudo tee -a /etc/sudoers
fi

if [ "$USERHASSSHACCESS1" == "YES" ]; then
  sudo addgroup $NEWUSER1 sshdusers
fi

sudo service ssh restart

NEWRPC1=`head -n 1 /etc/seedbox-from-scratch/rpc.txt | tail -n 1`
sudo perl -pi -e "s/^$NEWRPC1.*\n$//g" /etc/seedbox-from-scratch/rpc.txt

IRSSIPORT=`head -n 1 /etc/seedbox-from-scratch/ports.txt | tail -n 1`
sudo perl -pi -e "s/^$IRSSIPORT.*\n$//g" /etc/seedbox-from-scratch/ports.txt

SCGIPORT=`head -n 1 /etc/seedbox-from-scratch/ports.txt | tail -n 1`
sudo perl -pi -e "s/^$SCGIPORT.*\n$//g" /etc/seedbox-from-scratch/ports.txt

NETWORKPORT=`head -n 1 /etc/seedbox-from-scratch/ports.txt | tail -n 1`
sudo perl -pi -e "s/^$NETWORKPORT.*\n$//g" /etc/seedbox-from-scratch/ports.txt

IRSSIPASSWORD=`makepasswd`

# 12.

#create digest data file
echo -n $NEWUSER1:rutorrent:$PASSWORD1 > /tmp/pass

#remove current password from htpassword
sudo perl -pi -e "s/^$NEWUSER1\:.*\n$//g" /etc/apache2/htpasswd

#create user and password for this new rutorrent user
echo $NEWUSER1:rutorrent:`md5sum /tmp/pass | cut -d" " -f1` | sudo tee -a /etc/apache2/htpasswd

# 19.
sudo cp /etc/seedbox-from-scratch/rtorrent.rc.template  $HOMEJAILED/.rtorrent.rc > /dev/null

sudo perl -pi -e "s/<username>/$NEWUSER1$ADDHOME1/g" $HOMEJAILED/.rtorrent.rc
sudo perl -pi -e "s/5995/$SCGIPORT/g" $HOMEJAILED/.rtorrent.rc
sudo perl -pi -e "s/99888/$NETWORKPORT/g" $HOMEJAILED/.rtorrent.rc

sudo chown $NEWUSER1:$NEWUSER1   $HOMEJAILED/.rtorrent.rc:$NEWUSER1 $HOMEJAILED/.rtorrent.rc

# 20.
sudo mkdir -p $HOMEJAILED/downloads/auto
sudo mkdir -p $HOMEJAILED/downloads/manual
sudo mkdir -p $HOMEJAILED/downloads/watch
sudo mkdir -p $HOMEJAILED/downloads/.session
sudo chown -R $NEWUSER1:$NEWUSER1 $HOMEJAILED/downloads

# 21.

sudo cp /etc/seedbox-from-scratch/rtorrent.conf.template /etc/init/rtorrent.$NEWUSER1.conf
sudo perl -pi -e "s/<username>/$NEWUSER1/g" /etc/init/rtorrent.$NEWUSER1.conf

# 22.
# prepare the tree
sudo mkdir -p /var/www/rutorrent/conf/users/$NEWUSER1/plugins/autodl-irssi
sudo mkdir -p /var/www/rutorrent/conf/users/$NEWUSER1/plugins/diskspace
sudo mkdir -p /var/www/rutorrent/conf/users/$NEWUSER1/plugins/fileupload

echo '<?php $topDirectory = "/home"; ?>' | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins/diskspace/conf.php

#some of those files will be changed later in this script
sudo cp /var/www/rutorrent/conf/access.ini   /var/www/rutorrent/conf/users/$NEWUSER1/
sudo cp /var/www/rutorrent/conf/config.php  /var/www/rutorrent/conf/users/$NEWUSER1/
sudo cp /var/www/rutorrent/conf/plugins.ini   /var/www/rutorrent/conf/users/$NEWUSER1/

# 24.

sudo cp /etc/seedbox-from-scratch/rutorrent.conf.users.config.php.template /var/www/rutorrent/conf/users/$NEWUSER1/config.php

sudo perl -pi -e "s/5995/$SCGIPORT/g" /var/www/rutorrent/conf/users/$NEWUSER1/config.php
sudo perl -pi -e "s/RPC123/$NEWRPC1/g" /var/www/rutorrent/conf/users/$NEWUSER1/config.php
sudo perl -pi -e "s/<username>/$NEWUSER1/g" /var/www/rutorrent/conf/users/$NEWUSER1/config.php
sudo perl -pi -e "s/<homedir>/\/home\/$NEWUSER1/g" /var/www/rutorrent/conf/users/$NEWUSER1/config.php

# 25.

sudo cp /etc/seedbox-from-scratch/rutorrent.conf.users.plugins.ini.template /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
if [ "$CHROOTJAIL1" == "YES" ]; then
  echo "" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "[fileupload]" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "enabled = no" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "[mediastream]" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "enabled = no" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "[filemanager]" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "enabled = no" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
else
  echo "" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "[fileupload]" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "enabled = yes" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "[mediastream]" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "enabled = yes" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "[filemanager]" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
  echo "enabled = user-defined" | sudo tee -a /var/www/rutorrent/conf/users/$NEWUSER1/plugins.ini
fi

# 29.

sudo rm -R $HOMEJAILED/.irssi
sudo mkdir -p $HOMEJAILED/.irssi/scripts/autorun
cd $HOMEJAILED/.irssi/scripts
sudo wget --no-check-certificate -O autodl-irssi.zip https://sourceforge.net/projects/autodl-irssi/files/autodl-irssi-v1.31.zip/download
sudo unzip -o autodl-irssi.zip
sudo rm autodl-irssi.zip
sudo cp autodl-irssi.pl autorun/
sudo mkdir -p $HOMEJAILED/.autodl
sudo touch $HOMEJAILED/.autodl/autodl.cfg
sudo mv $HOMEJAILED/.irssi/scripts/AutodlIrssi/trackers $HOMEJAILED/.irssi/scripts/AutodlIrssi/trackers.original
sudo unzip /etc/seedbox-from-scratch/autodl-trackers.zip -d $HOMEJAILED/.irssi/scripts/AutodlIrssi/trackers/
sudo chown -R $NEWUSER1: $HOMEJAILED/.irssi/scripts/AutodlIrssi/trackers


sudo cp /etc/seedbox-from-scratch/rutorrent.conf.users.plugins.autodl-irssi.conf.php.template  /var/www/rutorrent/conf/users/$NEWUSER1/plugins/autodl-irssi/conf.php
sudo perl -pi -e "s/<PASSWORD>/$IRSSIPASSWORD/g"  /var/www/rutorrent/conf/users/$NEWUSER1/plugins/autodl-irssi/conf.php
sudo perl -pi -e "s/<PORT>/$IRSSIPORT/g" /var/www/rutorrent/conf/users/$NEWUSER1/plugins/autodl-irssi/conf.php

sudo cp /etc/seedbox-from-scratch/rutorrent.conf.users.plugins.fileupload.conf.php.template  /var/www/rutorrent/conf/users/$NEWUSER1/plugins/fileupload/config.php > /dev/null
sudo chown -R www-data:www-data /var/www/rutorrent/conf/users/$NEWUSER1/plugins/fileupload/

sudo cp /etc/seedbox-from-scratch/home.user.autodl.autodl.cfg.template  $HOMEJAILED/.autodl/autodl.cfg

sudo perl -pi -e "s/<PASSWORD>/$IRSSIPASSWORD/g"  $HOMEJAILED/.autodl/autodl.cfg
sudo perl -pi -e "s/<PORT>/$IRSSIPORT/g"  $HOMEJAILED/.autodl/autodl.cfg
sudo perl -pi -e "s/use Digest\:\:SHA1 qw/use Digest\:\:SHA qw/g" $HOMEJAILED/.irssi/scripts/AutodlIrssi/MatchedRelease.pm

sleep 3
sudo su --login --command "screen -d -m -S rtorrent rtorrent" $NEWUSER1
sleep 3
sudo su --login --command "screen -d -m -S irssi irssi" $NEWUSER1

sudo chown -R $NEWUSER1:$NEWUSER1  $HOMEJAILED/.autodl
sudo chown -R $NEWUSER1:$NEWUSER1  $HOMEJAILED/.irssi

##################### LAST LINE ###########
